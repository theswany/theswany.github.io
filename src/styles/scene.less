@import "../../../nuclear-physics/node_modules/bootstrap/less/mixins/vendor-prefixes.less";
@import "variables.less";
@import "../../../nuclear-physics/src/styles/mixins.less";

.scene-view {
    width: 100%;
    height: @scene-height;

    #gradient.vertical(#81C8FF; #fff; 0%; 85%);

    @media screen and (max-height: @short-window) {
        height: (@short-scene-height - @short-screen-playback-controls-height);
    }

    #sim-dating-game & {
        height: (@scene-height + @playback-controls-height);
        #gradient.vertical(#81C8FF; #fff; 0%; 60%);

        @media screen and (max-height: @short-window) {
            height: (@short-scene-height);
        }
    }
}

.scene-view-ui {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 0;

    .reset-nuclei-btn,
    .reset-game-btn {
        position: absolute;
        right: 268px;
        top: 190px;
        background-color: @link-color;
        color: #fff;
        margin: 0;

        &:hover {
            opacity: 0.9;
        }

        @media screen and (max-height: @short-window) {
            right: auto;
            left: 21px;
            top: 162px;
        }

        #sim-decay-rates & {
            top: 270px;

            @media screen and (max-height: @short-window) {
                right: 32px;
                left: auto;
                top: 324px;
            }
        }

        #sim-dating-game & {
            top: (176px + @panel-margin * 2);
            right: @panel-margin;

            @media screen and (max-height: @short-window) {
                top: (176px + @short-screen-panel-margin * 2);
                right: @short-screen-panel-margin;
                left: auto;
            }
        }
    }

    .bucket-btns-wrapper {
        position: absolute;
        right: 350px;
        top: 560px;
        width: 0;

        .add-10-btn {
            position: absolute;
            left: 100%;
            margin-left: 6px;
            .button-variant(#fff, @link-color, #fff, @link-color);
        }

        .remove-10-btn {
            position: absolute;
            right: 100%;
            margin-right: 6px;
            .button-variant(@btn-fg, @btn-bg, @btn-fg, @btn-bg);
        }
    }

    .landscape-buttons-wrapper {
        position: absolute;
        @height: 50px;
        height: @height;
        top: (@scene-height - @height);
        left: 100%;

        @media screen and (max-height: @short-window) {
            top: (@short-scene-height - @short-screen-playback-controls-height - @height);
        }

        button {
            position: absolute;
            right: 15px;
            bottom: 15px;
            background-color: #78b04a;
            color: #fff;

            &:hover {
                color: #fff;
                background-color: darken(#78b04a, 5%);
            }

            @media screen and (max-height: @short-window) {
                bottom: 9px;
            }
        }
    }

    .win-display {
        position: absolute;
        width: 100%;
        height: @scene-height;
        background: fadeout(#fff, 30%);
        display: none;
        z-index: 5000;
        .transition(~'opacity 200ms');

        @media screen and (max-height: @short-window) {
            height: @short-scene-height;
        }

        span {
            position: absolute;
            width: 100%;
            height: 100px;
            line-height: 100px;
            top: 50%;
            margin-top: -50px;
            text-align: center;
            color: #77af41;
            font-size: 100px;
            text-shadow: 4px 4px 0px #A3C383;

            .animation-name(win);
            .animation-duration(200ms);
            .animation-timing-function(linear);
            .animation-fill-mode(forwards);           
        }

        &.animate-out {
            opacity: 0;

            span {
                display: none;
            }
        }
        
    }
}

@win-rotation: -15deg;

@keyframes win {
      0% { .transform(rotate(0deg)          scale(0.7, 0.7)); }
     70% { .transform(rotate(@win-rotation) scale(1.4, 1.4)); }
    100% { .transform(rotate(@win-rotation) scale(1,   1)); }
}